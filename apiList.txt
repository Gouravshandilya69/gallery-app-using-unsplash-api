https://picsum.photos/200/300 //you'll get a random image Just add your desired image size (width & height) 
https://picsum.photos/200 //To get a square image, just add the size.

unsplash access key:-NNRp3OnIR7WZfQfhv_4Upwq5M3BN3AUjzo3S9n0J6Os
Secret key:-N7gee6PB3GdSm_5gGHyza6CmX6ygr_TKerB0FImGNxU



import React, { useState, useEffect } from 'react';
import axios from 'axios'; // You may need to install Axios or use another library for API requests

function PhotoGrid() {
  const [photos, setPhotos] = useState([]);

  useEffect(() => {
    // Fetch photos from your API
    axios.get('YOUR_API_ENDPOINT')
      .then(response => {
        setPhotos(response.data);
      })
      .catch(error => {
        console.error('Error fetching photos:', error);
      });
  }, []);

  const setGridItemSize = (image, index) => {
    const gridItem = document.getElementById(`grid-item-${index}`);
    if (gridItem) {
      const aspectRatio = image.width / image.height;
      const width = 300; // You can adjust the default width
      const height = width / aspectRatio;
      gridItem.style.width = `${width}px`;
      gridItem.style.height = `${height}px`;
    }
  };

  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
      {photos.map((photo, index) => (
        <div
          key={photo.id}
          id={`grid-item-${index}`}
          className="bg-gray-200 rounded overflow-hidden shadow-md"
        >
          <img
            src={photo.url} 
            alt={photo.description}
            onLoad={(e) => setGridItemSize(e.target, index)}
          />
        </div>
      ))}
    </div>
  );
}

export default PhotoGrid;
